define(function(require) {
    "use strict";

    var viewResolver = require("ViewResolver"), srvcViewTemplate = require('Text!../views/finance.html'), SrvcPlanModelView = require('../model/serviceviewmodel'), srvcPlanRepo = require('repository/serviceplanrepository'), PagedGridView = require("modules/common/model/pagedgridmodelremote"), DataMapper = require("modules/common/model/datamapper"), PageModel = require("modules/common/model/pagemodel");

    var srvcPlanController = {

	srvcPlanPagedGridView : ko.observable(""),
	
	init : function() {
	    console.log("Initialize Finance controller");
	    var page = new PageModel(20);
	    var dataMapper = new DataMapper(SrvcPlanModelView);
	    var grid = new PagedGridView(srvcPlanRepo, page, dataMapper, ["5", "10", "15" ], "5");

	    console.log("Initialize JSON-Grid controller");
	    srvcPlanController.srvcPlanPagedGridView(grid);
	    srvcPlanController.srvcPlanPagedGridView().init();

	    viewResolver.renderModelView("FinanceManagerDiv", this, srvcViewTemplate, "gridStyle");
	},

	addNewServicePlan : function() {
	    var svcPlanModelView = new SrvcPlanModelView("");
	    svcPlanModelView.viewModel.isSelected(true);
	    svcPlanModelView.viewModel.isIdEditable(true);
	    svcPlanModelView.viewModel.isEditable(true);
	    srvcPlanController.srvcPlanPagedGridView().gridLocalDataRepo().push(svcPlanModelView);
	    srvcPlanController.srvcPlanPagedGridView().moveToLastPage();
	},

	deleteServicePlan : function(data) {
	    if (data !== "") {
		srvcPlanController.srvcPlanPagedGridView().gridLocalDataRepo().remove(data);
		//srvcPlanRepo.removeServicePlan(data.dataModel);
		srvcPlanController.srvcPlanPagedGridView().moveToLastPage();
	    }

	},

	saveServicePlan : function(data) {
	    if (data !== "") {
		if (data.viewModel.isIdEditable() === true) {
		    data.viewModel.isIdEditable(false);
		    data.viewModel.isEditable(false);
		    srvcPlanRepo.persistServicePlan(data.dataModel).then(function(serverData) {
			var mappedSrvcList = $.map(serverData, function(item) {
			    return new SrvcModelView(item);
			});
			srvcPlanController.srvcPlanPagedGridView().dataRepo.removeAll();
			srvcPlanController.srvcPlanPagedGridView().dataRepo(mappedSrvcList);
		    });
		} else if (data === "") {
		    srvcPlanController.srvcPlanPagedGridView().dataRepo.remove(data);
		} else {
		    data.viewModel.isEditable(false);
		    srvcPlanRepo.updateServicePlan(data.dataModel);
		}
	    }

	},
	
	updateServiceRateToPlan:function(data){
	    
	   console.log(ko.toJSON(data)); 
	}

    };

    return srvcPlanController;
});